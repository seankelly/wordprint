#!/usr/bin/env python
"""
Create word fingerprints from CSV dumps of the comments table of a
Wordpress site.
"""

import csv
import re
import sys
from collections import defaultdict

def usage():
    print "usage: %s CSV ..." % (sys.argv[0])
    sys.exit(0)

def read_comments(csv_file):
    # Field 3: user
    # Field 9: text
    f = open(csv_file, 'rb')
    c = csv.reader(f, delimiter=',', doublequote=False, escapechar='\\')
    for l in c:
        yield l[2], l[8]

def generate_wordprint(comments_csv):
    # This dict maps word => set(users).
    # When a word becomes too common, delete it and move it to common_words.
    wordprint = defaultdict(lambda x: set())
    # When a word becomes too common, move it to the common_words set. This
    # will be checked first before adding words to wordprint.
    common_words = set()
    find_words = re.compile('(\w+)')
    for user, text in read_comments(comments_csv):
        # Convert to lowercase.
        lower_text = text.lower()
        # Grab all 'words'. Using the regex understanding of what a word is.
        words = find_words.findall(lower_text)

if __name__ == '__main__':
    if len(sys.argv) == 1:
        usage()

    for comments_csv in sys.argv[1:]:
        generate_wordprint(comments_csv)
